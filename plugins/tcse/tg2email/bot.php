<?php
/*
=====================================================
 Telegram to Email Bot - TCSE-cms.com
-----------------------------------------------------
 Version: 0.8.5.2 (Stable)
 Release: 20.08.2025
-----------------------------------------------------
 https://tcse-cms.com/   
 https://deepseek.com/  
 https://chat.qwen.ai  
-----------------------------------------------------
 Copyright (c) 2025 Vitaly V Chuyakov
 MIT License
=====================================================
 File: /plugins/tcse/tg2email/bot.php
-----------------------------------------------------
 Purpose: –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –Ω–∞ email —Å 
          –≥–∏–±–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –≤–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
-----------------------------------------------------
 Features:
 ‚úî –ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è (1+ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –æ–¥–Ω–æ–º –ø–∏—Å—å–º–µ)
 ‚úî –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —á–∞—Ç–æ–≤, –∫–∞–Ω–∞–ª–æ–≤, –õ–°
 ‚úî –í–ª–æ–∂–µ–Ω–∏—è —Ñ–æ—Ç–æ < 5 –ú–ë (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 ‚úî –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–¥–∏–∞ (file.php)
 ‚úî –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π —Å—Ä–æ–∫ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ (media_ttl)
 ‚úî –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏—è–º–∏ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É
 ‚úî –ö–æ–º–∞–Ω–¥–∞ /send –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
 ‚úî –ü–æ–ª–Ω–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: @username | ID
 ‚úî –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö email
 ‚úî HTML –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–∏—Å—å–º–∞
 ‚úî –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞—â–∏—Ç–∞
=====================================================
*/

// –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ –ø–ª–∞–≥–∏–Ω–∞ –∏–∑ DLE 
include_once($_SERVER['DOCUMENT_ROOT'] . '/engine/data/tg2email.php');

// –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
$botToken = $tg2emailConfig['tg2email_TOKEN'];
$adminEmail = $tg2emailConfig['tg2email_adminEmail'];
$adminChatId = $tg2emailConfig['tg2email_CHATID'];
$bufferTime = (int)$tg2emailConfig['tg2email_bufferTime'];
$emailFormat = $tg2emailConfig['tg2email_formatEmail'] ?? '0'; // 0 = text, 1 = html
$mediaTtl = (int)$tg2emailConfig['tg2email_media_ttl'] ?? 365; // 0 = –≤–µ—á–Ω–æ
$embedPhotos = $tg2emailConfig['tg2email_embedPhotos'] ?? '1'; // 1 = –≤–∫–ª—é—á–µ–Ω–æ

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
file_put_contents('bot_log.txt', date('[Y-m-d H:i:s]')." Input: ".file_get_contents('php://input')."\n", FILE_APPEND);
$update = json_decode(file_get_contents('php://input'), true);

// === üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
if (isset($update['message'])) {
    $message = $update['message'];
    $chatId = $message['chat']['id'];
    $userId = $message['from']['id'] ?? null;

    if (!$userId) {
        exit;
    }

    // –ï—Å–ª–∏ Chat ID = 0 ‚Äî —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –≤—Å–µ–º
    if ($adminChatId === '0') {
        // —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
    } else {
        $allowedIds = array_map('trim', explode(',', $adminChatId));
        $allowedIds = array_filter($allowedIds, 'is_numeric');

        if (!in_array($userId, $allowedIds)) {
            // ‚ùå –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∫–∞–∑
            $blockedMessage = "‚ùå –í–∞–º –∑–∞–ø—Ä–µ—â–µ–Ω–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ —ç—Ç–æ–≥–æ –±–æ—Ç–∞.\n\n";
            $blockedMessage .= "–î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—à–∏—Ç–µ: @TCSEcmscom";

            sendTelegramMessage($chatId, $blockedMessage);
            logMessage("–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $userId");
            exit;
        }
    }
} else {
    exit;
}
// === ‚úÖ –ö–æ–Ω–µ—Ü –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ===

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ===
if (isset($update['message'])) {
    $message = $update['message'];
    $chatId = $message['chat']['id'];
    $text = isset($message['text']) ? trim($message['text']) : '';
    $userId = $message['from']['id'] ?? null;

    // === ü§ñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ ===
    if ($text === '/start') {
        $welcome = "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>tg2email</b>!\n\n";
        $welcome .= "üì© –≠—Ç–æ—Ç –±–æ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram –Ω–∞ email.\n\n";
        $welcome .= "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n";
        $welcome .= "‚Ä¢ <code>/send</code> ‚Äî –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è\n";
        $welcome .= "‚Ä¢ <code>/help</code> ‚Äî –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞\n";
        $welcome .= "‚Ä¢ <code>/id</code> ‚Äî —É–∑–Ω–∞—Ç—å –≤–∞—à Telegram ID\n\n";
        $welcome .= "üìå –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –∏ –æ–Ω–æ –ø–æ–ø–∞–¥—ë—Ç –≤ –±—É—Ñ–µ—Ä.";

        sendTelegramMessage($chatId, $welcome);
        exit;
    }

    if ($text === '/help') {
        $detailedHelp = "üìò <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é tg2email</b>\n\n";
        $detailedHelp .= "1. <b>–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π</b>\n";
        $detailedHelp .= "   –ü–µ—Ä–µ—à–ª–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∏–∑ –õ–°, –≥—Ä—É–ø–ø—ã –∏–ª–∏ –∫–∞–Ω–∞–ª–∞) ‚Äî –æ–Ω–æ –¥–æ–±–∞–≤–∏—Ç—Å—è –≤ –±—É—Ñ–µ—Ä.\n\n";
        $detailedHelp .= "2. <b>–ë—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è</b>\n";
        $detailedHelp .= "   –°–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–∫–∞–ø–ª–∏–≤–∞—é—Ç—Å—è <b>{$bufferTime} –º–∏–Ω</b>. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è.\n\n";
        $detailedHelp .= "3. <b>–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞</b>\n";
        $detailedHelp .= "   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ <code>/send</code>, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å—ë —Å–µ–π—á–∞—Å.\n\n";
        $detailedHelp .= "4. <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ ID</b>\n";
        $detailedHelp .= "   –ö–æ–º–∞–Ω–¥–∞ <code>/id</code> –ø–æ–∫–∞–∂–µ—Ç –≤–∞—à Telegram ID ‚Äî –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞.\n\n";
        $detailedHelp .= "üì¨ –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ email: <code>" . htmlspecialchars($adminEmail) . "</code>";

        sendTelegramMessage($chatId, $detailedHelp);
        exit;
    }

    if ($text === '/id') {
        sendTelegramMessage($chatId, "üÜî –í–∞—à Telegram ID: <code>$userId</code>", 'HTML');
        exit;
    }

    if ($text === '/send') {
        $bufferFile = "buffer_$chatId.txt";
        if (file_exists($bufferFile)) {
            $buffer = json_decode(file_get_contents($bufferFile), true);
            sendBufferedMessages($buffer['messages'], $chatId);
            unlink($bufferFile);
            sendTelegramMessage($chatId, "‚úÖ –ù–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!");
        } else {
            sendTelegramMessage($chatId, "‚ÑπÔ∏è –í –±—É—Ñ–µ—Ä–µ –Ω–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π.");
        }
        exit;
    }

    // === –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
    if (isset($message['forward_from']) || isset($message['forward_sender_name']) || isset($message['forward_from_chat'])) {
        $bufferFile = "buffer_$chatId.txt";
        $currentTime = time();

        // –ï—Å–ª–∏ –µ—Å—Ç—å –±—É—Ñ–µ—Ä –∏ –æ–Ω –µ—â–µ –∞–∫—Ç—É–∞–ª–µ–Ω
        if (file_exists($bufferFile)) {
            $buffer = json_decode(file_get_contents($bufferFile), true);
            if ($currentTime - $buffer['timestamp'] < $bufferTime * 60) {
                $buffer['messages'][] = prepareMessage($message);
                file_put_contents($bufferFile, json_encode($buffer));
                $timeLeft = $bufferTime * 60 - ($currentTime - $buffer['timestamp']);
                sendTelegramMessage($chatId, "üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –±—É—Ñ–µ—Ä (–æ—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ " . ceil($timeLeft/60) . " –º–∏–Ω)");
                exit;
            } else {
                // –í—Ä–µ–º—è –≤—ã—à–ª–æ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
                sendBufferedMessages($buffer['messages'], $chatId);
            }
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –±—É—Ñ–µ—Ä
        $newBuffer = [
            'timestamp' => $currentTime,
            'messages' => [prepareMessage($message)]
        ];
        file_put_contents($bufferFile, json_encode($newBuffer));
        
        $source = "—Å–æ–æ–±—â–µ–Ω–∏–µ";
        if (isset($message['forward_from_chat'])) {
            $source = "—Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ " . ($message['forward_from_chat']['type'] === 'channel' ? '–∫–∞–Ω–∞–ª–∞' : '—á–∞—Ç–∞');
        }
        
        sendTelegramMessage($chatId, "üì• –ü–µ—Ä–≤–æ–µ $source –≤ –±—É—Ñ–µ—Ä–µ. –ñ–¥—É " . $bufferTime . " –º–∏–Ω...");
    } else {
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –∫–æ–º–∞–Ω–¥—É –∏ –Ω–µ –ø–µ—Ä–µ—Å—ã–ª–∫—É)
        $helpText = "üì® –ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∏–∑ –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞, –≥—Ä—É–ø–ø—ã –∏–ª–∏ –∫–∞–Ω–∞–ª–∞), –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é –µ–≥–æ –Ω–∞ email\n";
        $helpText .= "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /send –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏";
        sendTelegramMessage($chatId, $helpText);
    }
}

// –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
function prepareMessage($message) {
    global $tg2emailConfig; // üî• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º

    $data = [
        'text' => '',
        'date' => date('d.m.Y H:i', $message['date']),
        'has_media' => false,
        'media_type' => null,
        'message_type' => 'private',
        'sender' => '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        'link' => null,
        'user_id' => null,
        'file_direct_link' => null,
        'embed_file' => null, // –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏—è
    ];

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç
    if (isset($message['text'])) {
        $data['text'] = $message['text'];
    } elseif (isset($message['caption'])) {
        $data['text'] = $message['caption'];
    }

    // –¢–∏–ø –º–µ–¥–∏–∞
    $mediaTypes = ['photo', 'video', 'document', 'audio', 'voice', 'sticker'];
    foreach ($mediaTypes as $type) {
        if (isset($message[$type])) {
            $data['has_media'] = true;
            $data['media_type'] = $type;
            break;
        }
    }

    // === –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∏ —Ç–∏–ø ===
    if (isset($message['forward_from'])) {
        $from = $message['forward_from'];
        $firstName = $from['first_name'] ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
        $lastName = isset($from['last_name']) ? ' '.$from['last_name'] : '';
        $username = isset($from['username']) ? "@{$from['username']}" : null;
        $userId = $from['id'];

        $sender = trim($firstName . $lastName);
        $details = [];
        if ($username) $details[] = $username;
        $details[] = "ID: {$userId}";
        $data['sender'] = $sender . ' (' . implode(' | ', $details) . ')';
        $data['message_type'] = 'private';
        $data['user_id'] = $userId;

    } elseif (isset($message['forward_sender_name'])) {
        $data['sender'] = $message['forward_sender_name'];
        $data['message_type'] = 'anonymous';

    } elseif (isset($message['forward_from_chat'])) {
        $chat = $message['forward_from_chat'];
        $data['sender'] = $chat['title'] ?? '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
        if (isset($chat['username'])) {
            $data['sender'] .= " (@{$chat['username']})";
        }
        $data['message_type'] = $chat['type'];

        // –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (isset($message['forward_from_message_id'])) {
            $username = $chat['username'] ?? null;
            if ($username) {
                $data['link'] = "https://t.me/$username/" . $message['forward_from_message_id'];
            }
        }
    }

    // –î–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞
    if ($data['has_media'] && $data['media_type'] == 'document' && isset($message['document']['file_name'])) {
        $data['text'] = "–§–∞–π–ª: " . $message['document']['file_name'] . "\n\n" . $data['text'];
    }

    // === –°–û–•–†–ê–ù–Ø–ï–ú –§–ê–ô–õ –í –ë–ê–ó–£ –ò –ì–ï–ù–ï–†–ò–†–£–ï–ú –ë–ï–ó–û–ü–ê–°–ù–£–Æ –°–°–´–õ–ö–£ ===
    if ($data['has_media']) {
        $fileId = null;

        if ($data['media_type'] == 'photo') {
            $photos = $message['photo'];
            $fileId = $photos[count($photos)-1]['file_id']; // –ª—É—á—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ
        } elseif (isset($message[$data['media_type']]['file_id'])) {
            $fileId = $message[$data['media_type']]['file_id'];
        }

        if ($fileId) {
            $getFileUrl = "https://api.telegram.org/bot{$GLOBALS['botToken']}/getFile?file_id={$fileId}";
            $fileInfo = @json_decode(file_get_contents($getFileUrl), true);

            if (isset($fileInfo['result']['file_path'])) {
                $filePath = $fileInfo['result']['file_path'];
                $filename = basename($filePath);

                // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏—è
                $url = "https://api.telegram.org/file/bot{$GLOBALS['botToken']}/{$filePath}";
                $headers = @get_headers($url, 1);
                $fileSize = (int)($headers['Content-Length'] ?? 0);

                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω–æ –ª–∏ –≤–ª–æ–∂–µ–Ω–∏–µ
                $embedEnabled = isset($tg2emailConfig['tg2email_embedPhotos']) && $tg2emailConfig['tg2email_embedPhotos'] == '1';

                if ($embedEnabled && $fileSize > 0 && $fileSize <= 5 * 1024 * 1024) {
                    $content = file_get_contents($url);
                    if ($content !== false) {
                        $data['embed_file'] = [
                            'content' => base64_encode($content),
                            'filename' => $filename,
                            'size' => $fileSize,
                            'type' => mime_content_type('//tmp/' . $filename) ?: 'application/octet-stream'
                        ];
                    }
                }

                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ media_db.json
                $dbFile = __DIR__ . '/media_db.json';
                $db = file_exists($dbFile) ? json_decode(file_get_contents($dbFile), true) : [];
                $db[$fileId] = [
                    'file_path' => $filePath,
                    'timestamp' => time(),
                    'original_filename' => $filename
                ];
                file_put_contents($dbFile, json_encode($db, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT));

                // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Å—Å—ã–ª–∫—É
                $siteUrl = (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] !== 'off' ? 'https://' : 'http://') . $_SERVER['HTTP_HOST'];
                $data['file_direct_link'] = $siteUrl . "/plugins/tcse/tg2email/file.php?id=" . urlencode($fileId);
            }
        }
    }

    return $data;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
function sendBufferedMessages($messages, $chatId) {
    global $adminEmail, $emailFormat, $mediaTtl;

    $emailSubject = "–°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram (".count($messages).")";
    $boundary = '==MULTIPART_BOUNDARY_' . md5(uniqid(mt_rand(), true));

    $headers = "From: ".getFromEmail()."\r\n";
    $headers .= "MIME-Version: 1.0\r\n";
    $headers .= "Content-Type: multipart/mixed; boundary=\"$boundary\"\r\n";

    // === –û–°–ù–û–í–ù–û–ï –¢–ï–õ–û –ü–ò–°–¨–ú–ê (–ø–µ—Ä–≤–∞—è —á–∞—Å—Ç—å) ===
    $body = "--$boundary\r\n";

    if ($emailFormat == '1') {
        $body .= "Content-Type: text/html; charset=utf-8\r\n\r\n";
        $body .= "<div style='font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; color: #333; line-height: 1.6;'>";
        $body .= "<h2 style='color: #2c3e50; border-bottom: 2px solid #3498db; padding-bottom: 5px;'>–°–æ–±—Ä–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ".count($messages)."</h2>";

        foreach ($messages as $index => $msg) {
            $typeLabel = getMessageTypeLabel($msg['message_type']);
            $mediaLabel = $msg['has_media'] ? getMediaLabel($msg['media_type']) : '';

            $body .= "
            <div style='background: #f9f9f9; border-left: 4px solid #3498db; padding: 15px; margin: 15px 0; border-radius: 0 8px 8px 0;'>
                <strong style='color: #2c3e50;'>–°–æ–æ–±—â–µ–Ω–∏–µ ".($index+1)."</strong>
                <p style='margin: 8px 0;'><strong>–û—Ç:</strong> ".htmlspecialchars($msg['sender'])."</p>
                <p style='margin: 8px 0;'><strong>–î–∞—Ç–∞:</strong> ".$msg['date']."</p>
                <p style='margin: 8px 0;'><strong>–¢–∏–ø:</strong> $typeLabel</p>
                $mediaLabel
            ";

            if (!empty($msg['link'])) {
                $body .= "<p style='margin: 8px 0;'><strong>–°—Å—ã–ª–∫–∞:</strong> <a href='".$msg['link']."' target='_blank'>–û—Ç–∫—Ä—ã—Ç—å –≤ Telegram</a></p>";
            }

            if (!empty($msg['file_direct_link'])) {
                $body .= "<p style='margin: 8px 0;'><strong>–§–∞–π–ª:</strong> <a href='".$msg['file_direct_link']."' target='_blank'>–°–∫–∞—á–∞—Ç—å</a></p>";
            }

            if (!empty($msg['text'])) {
                $body .= "<pre style='background:#fff; padding:10px; border:1px solid #ddd; border-radius:4px; overflow:auto; white-space: pre-wrap; font-size: 14px;'>".
                    htmlspecialchars(trim($msg['text'])).
                    "</pre>";
            }

            $body .= "</div>";
        }

        $body .= "
            <p style='color: #7f8c8d; font-size: 12px; margin-top: 30px; border-top: 1px solid #eee; padding-top: 10px;'>
                –≠—Ç–æ –ø–∏—Å—å–º–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ <strong>tg2email</strong> ‚Äî –ø–ª–∞–≥–∏–Ω –¥–ª—è DLE.
            </p>
        </div>";
    } else {
        $body .= "Content-Type: text/plain; charset=utf-8\r\n\r\n";
        foreach ($messages as $msg) {
            $body .= "=== –°–æ–æ–±—â–µ–Ω–∏–µ ===\n";
            $body .= "–û—Ç: ".$msg['sender']."\n";
            $body .= "–î–∞—Ç–∞: ".$msg['date']."\n";
            if ($msg['has_media']) $body .= "–ú–µ–¥–∏–∞: ".ucfirst($msg['media_type'])."\n";
            if (!empty($msg['link'])) $body .= "–°—Å—ã–ª–∫–∞: ".$msg['link']."\n";
            if (!empty($msg['file_direct_link'])) $body .= "–§–∞–π–ª: ".$msg['file_direct_link']."\n";
            if (!empty($msg['text'])) $body .= "\n".$msg['text']."\n";
            $body .= "\n";
        }
    }

    // === –ü–ï–†–ï–•–û–î –ö –í–õ–û–ñ–ï–ù–ò–Ø–ú ===
    $body .= "\r\n"; // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é —á–∞—Å—Ç—å
    $body .= "--$boundary\r\n"; // –ù–∞—á–∏–Ω–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏–µ

    foreach ($messages as $msg) {
        if (isset($msg['embed_file'])) {
            $body .= "Content-Type: {$msg['embed_file']['type']}; name=\"{$msg['embed_file']['filename']}\"\r\n";
            $body .= "Content-Transfer-Encoding: base64\r\n";
            $body .= "Content-Disposition: attachment; filename=\"{$msg['embed_file']['filename']}\"\r\n\r\n";
            $body .= chunk_split($msg['embed_file']['content'], 76, "\r\n");
            $body .= "--$boundary\r\n";
        }
    }

    // === –ó–ê–í–ï–†–®–ï–ù–ò–ï –ü–ò–°–¨–ú–ê ===
    $body = rtrim($body, "--$boundary\r\n");
    $body .= "--\r\n";

    // === –û–¢–ü–†–ê–í–ö–ê –ù–ê –ù–ï–°–ö–û–õ–¨–ö–û EMAIL ===
    $recipients = array_map('trim', explode(',', $adminEmail));
    $successCount = 0;
    $failedRecipients = [];

    foreach ($recipients as $recipient) {
        if (empty($recipient)) continue;
        if (!filter_var($recipient, FILTER_VALIDATE_EMAIL)) continue;

        $uniqueHeaders = $headers . "Message-ID: <" . md5(uniqid(mt_rand(), true)) . "@{$_SERVER['HTTP_HOST']}>\r\n";

        if (mail($recipient, $emailSubject, $body, $uniqueHeaders)) {
            $successCount++;
        } else {
            $failedRecipients[] = $recipient;
        }
    }

    if ($successCount > 0) {
        $msg = "üì¨ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ".count($messages)." —Å–æ–æ–±—â–µ–Ω–∏–π!";
        if (!empty($failedRecipients)) {
            $msg .= " (–Ω–µ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: " . implode(', ', $failedRecipients) . ")";
        }
        sendTelegramMessage($chatId, $msg);
    } else {
        sendTelegramMessage($chatId, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –Ω–∏ –æ–¥–Ω–æ–º—É –ø–æ–ª—É—á–∞—Ç–µ–ª—é");
    }
}

// –û–ø–∏—Å–∞–Ω–∏–µ —Ç–∏–ø–∞ (–¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞)
function getMessageTypeDescription($type) {
    $types = [
        'private' => '–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
        'anonymous' => '–ê–Ω–æ–Ω–∏–º–Ω–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞',
        'channel' => '–ö–∞–Ω–∞–ª',
        'group' => '–ì—Ä—É–ø–ø–∞',
        'supergroup' => '–°—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞'
    ];
    return $types[$type] ?? $type;
}

// –¶–≤–µ—Ç–Ω–∞—è –º–µ—Ç–∫–∞ —Ç–∏–ø–∞ (HTML)
function getMessageTypeLabel($type) {
    $labels = [
        'private'   => '<span style="color: #27ae60; font-weight: bold;">–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</span>',
        'anonymous' => '<span style="color: #e67e22; font-weight: bold;">–ê–Ω–æ–Ω–∏–º–Ω–∞—è –ø–µ—Ä–µ—Å—ã–ª–∫–∞</span>',
        'channel'   => '<span style="color: #3498db; font-weight: bold;">–ö–∞–Ω–∞–ª</span>',
        'group'     => '<span style="color: #8e44ad; font-weight: bold;">–ì—Ä—É–ø–ø–∞</span>',
        'supergroup'=> '<span style="color: #8e44ad; font-weight: bold;">–°—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞</span>'
    ];
    return $labels[$type] ?? $type;
}

// –ú–µ—Ç–∫–∞ –º–µ–¥–∏–∞ (HTML)
function getMediaLabel($type) {
    $icons = ['photo' => 'üì∑', 'video' => 'üé•', 'document' => 'üìÑ', 'audio' => 'üéµ', 'voice' => 'üéô', 'sticker' => 'üñº'];
    $colors = ['photo' => '#e74c3c', 'video' => '#8e44ad', 'document' => '#3498db', 'audio' => '#16a085', 'voice' => '#f39c12', 'sticker' => '#95a5a6'];
    $icon = $icons[$type] ?? 'üìé';
    $color = $colors[$type] ?? '#333';
    return "<p style='margin: 8px 0;'><strong>–ú–µ–¥–∏–∞:</strong> <span style='color: $color; font-weight: bold;'>$icon ".ucfirst($type)."</span></p>";
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
function sendTelegramMessage($chatId, $text) {
    global $botToken;
    $url = "https://api.telegram.org/bot{$botToken}/sendMessage";
    $data = ['chat_id' => $chatId, 'text' => $text, 'parse_mode' => 'HTML'];
    $options = ['http' => ['method' => 'POST', 'header' => "Content-Type: application/x-www-form-urlencoded\r\n", 'content' => http_build_query($data)]];
    $context = stream_context_create($options);
    @file_get_contents($url, false, $context);
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è From: –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–º–µ–Ω–∞
function getFromEmail() {
    $siteHost = $_SERVER['HTTP_HOST'] ?? 'localhost';
    $siteHost = strtolower(trim($siteHost));
    $siteHost = preg_replace('/^www\./i', '', $siteHost);
    if (!filter_var("user@{$siteHost}", FILTER_VALIDATE_EMAIL)) {
        $siteHost = 'localhost';
    }
    return "telegram-bot@{$siteHost}";
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function logMessage($msg) {
    file_put_contents('auth_log.txt', date('[Y-m-d H:i:s] ') . $msg . "\n", FILE_APPEND);
}

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—É—Ñ–µ—Ä–æ–≤
$files = glob("buffer_*.txt");
foreach ($files as $file) {
    if (time() - filemtime($file) > 3600) {
        unlink($file);
    }
}

// –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –≤ media_db.json (—Å—Ç–∞—Ä—à–µ mediaTtl –¥–Ω–µ–π)
$dbFile = __DIR__ . '/media_db.json';
if (file_exists($dbFile) && $mediaTtl > 0) {
    $db = json_decode(file_get_contents($dbFile), true);
    $cleaned = false;
    $ttlSeconds = $mediaTtl * 86400;
    foreach ($db as $id => $data) {
        if (time() - ($data['timestamp'] ?? 0) > $ttlSeconds) {
            unset($db[$id]);
            $cleaned = true;
        }
    }
    if ($cleaned) {
        file_put_contents($dbFile, json_encode($db, JSON_UNESCAPED_UNICODE | JSON_PRETTY_PRINT));
    }
}
